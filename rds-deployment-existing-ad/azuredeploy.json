{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "dnsLabelPrefix": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.chinaeast2.cloudapp.chinacloudapi.cn'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'. For example johndns1 will result the final RDWEB access url like https://johndns1.chinaeast2.cloudapp.chinacloudapi.cn/RDWeb"
      }
    },
    "existingDomainName": {
      "type": "string",
      "metadata": {
        "description": "The name of the AD domain. For example contoso.com"
      },
      "defaultValue": "contoso.com"
    },
    "existingVnetName": {
      "type": "string",
      "defaultValue": "vnet",
      "metadata": {
        "description": "The VNET name of AD domain. For example johnvnet1"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "subnet",
      "metadata": {
        "description": "The subnet name of AD domain. For example johnsubnet1"
      }
    },
    "existingVnetRgName": {
      "type": "string",
      "defaultValue": "AD-Group",
      "metadata": {
        "description": "The Resource Group containing the existing Virtual Network resource"
      }

    },
    "existingAdminUserName": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'administrator'. For example: johnadmin"
      },
      "defaultValue": "vmadmin"
    },
    "existingAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    },
    "imageSKU": {
      "type": "string",
      "allowedValues": [
        "2019-Datacenter",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "Windows server SKU"
      },
      "defaultValue": "2019-Datacenter"
    },
    "numberOfRdshInstances": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of RemoteDesktopSessionHosts"
      }
    },
    "rdshVmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_D4_v3",
        "Standard_D2_v3"
      ],
      "defaultValue": "Standard_D4_v3",
      "metadata": {
        "description": "The size of the RDSH VMs"
      }
    },
    "dnsserverip":{
      "type": "string",
      "metadata": {
        "description": "The ip address for the DNS server private IP(most like the exist DC IP)"
      },
      "defaultValue": "10.0.0.4"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/msyinjie/RDS-Template-China/master/rds-deployment-existing-ad"
    }
  },
  "variables": {
    "gwdnsLabelPrefix": "[toLower(concat('gwd', parameters('dnsLabelPrefix')))]",
    "cbdnsLabelPrefix": "[toLower(concat('cbd', parameters('dnsLabelPrefix')))]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "dnsServerPrivateIp": "[parameters('dnsserverip')]",
    "vnet-id": "[resourceId(parameters('existingVnetRgName'),'Microsoft.Network/virtualNetworks',parameters('existingVnetName'))]",
    "subnet-id": "[concat(resourceId(parameters('existingVnetRgName'),'Microsoft.Network/virtualNetworks',parameters('existingVnetName')),'/subnets/',parameters('existingSubnetName'))]",
    "brokerVmName": "[concat(variables('vmPrefix'), 'rdcb-01')]",
    "brokerNicName": "[concat(variables('brokerVmName'),variables('networkNameSuffix'))]",
    "gatewayVmName": "[concat(variables('vmPrefix'), 'rdgw-01')]",
    "gatewayNicName": "[concat(variables('gatewayVmName'),variables('networkNameSuffix'))]",
    "publicIpRef": "publicIp",
    "brokerIpRef": "brokerpublicIp",
    "gatewayIpRef": "gatewaypublicIp",
    "networkNameSuffix": "-nic",
    "rdshVmName": "[concat(variables('vmPrefix'), 'rdsh-')]",
    "vmPrefix": ""
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIpRef')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('brokerIpRef')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('cbdnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('gatewayIpRef')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[parameters('gwdnsLabelPrefix')]"
        }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "gw-availabilityset",
      "properties": {
        "PlatformUpdateDomainCount": 5,
        "PlatformFaultDomainCount": 2
    },
      "location": "[resourceGroup().location]",           
       "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "cb-availabilityset",
      "properties": {
        "PlatformUpdateDomainCount": 5,
        "PlatformFaultDomainCount": 2
    },
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "rdsh-availabilityset",
      "properties": {
        "PlatformUpdateDomainCount": 5,
        "PlatformFaultDomainCount": 2
    },
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "Aligned"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "loadBalancer",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',variables('publicIpRef'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIpRef'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "https",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/backendAddressPools/LBBAP')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/probes/httpsProbe')]"
              }
            }
          },
          {
            "name": "udp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/frontendIPConfigurations/LBFE')]"
              },
              "backendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/backendAddressPools/LBBAP')]"
              },
              "protocol": "Udp",
              "frontendPort": 3391,
              "backendPort": 3391,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "loadDistribution": "SourceIPProtocol",
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadbalancer'),'/probes/udpProbe')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "httpsProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "udpProbe",
            "properties": {
              "protocol": "Tcp",
              "port": 3391,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [
          {
              "name": "rdp",
              "properties": {
                  "frontendIPConfiguration": {
                      "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/frontendIPConfigurations/LBFE')]"
                  },
                  "protocol": "Tcp",
                  "frontendPort": 3389,
                  "backendPort": 3389,
                  "enableFloatingIP": false
              }
          }
      ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('gatewayNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('gatewayIpRef'))]"
            },
              "subnet": {
                "id": "[variables('subnet-id')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/backendAddressPools/LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers','loadBalancer'),'/inboundNatRules/rdp')]"
                }
              ]
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
              "[variables('dnsServerPrivateIp')]"
          ]
      }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('brokerNicName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('brokerIpRef'))]"
            },
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
              "[variables('dnsServerPrivateIp')]"
          ]
      }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), variables('networkNameSuffix'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-nic-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "Microsoft.Network/loadBalancers/loadBalancer"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnet-id')]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
              "[variables('dnsServerPrivateIp')]"
          ]
      }
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('gatewayVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('gatewayNicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4_v3"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'gw-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[variables('gatewayVmName')]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "gw_osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
          }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('gatewayNicName'))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('gatewayVmName'), '/gateway')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('gatewayVmName'))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\Gateway",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('existingAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('existingAdminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'))]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "rdsh-vm-loop",
        "count": "[parameters('numberOfRdshInstances')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), variables('networkNameSuffix'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('rdshVmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'rdsh-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'))]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
          }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'), variables('networkNameSuffix')))]"
            }
          ]
        }
      },
      "resources": [
        {
          "apiVersion": "2015-06-15",
          "type": "Microsoft.Compute/virtualMachines/extensions",
          "name": "[concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0'),'/sessionhost')]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', concat(variables('rdshVmName'), padLeft(add(copyindex(), 1), 2, '0')))]"
          ],
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.11",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "ModulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
              "ConfigurationFunction": "Configuration.ps1\\SessionHost",
              "Properties": {
                "DomainName": "[parameters('existingDomainName')]",
                "AdminCreds": {
                  "UserName": "[parameters('existingAdminUserName')]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "Items": {
                "AdminPassword": "[parameters('existingAdminPassword')]"
              }
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('brokerVmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('brokerNicName'))]",
        "rdsh-vm-loop"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4_v3"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', 'cb-availabilityset')]"
        },
        "osProfile": {
          "computerName": "[variables('brokerVmName')]",
          "adminUsername": "[parameters('existingAdminUserName')]",
          "adminPassword": "[parameters('existingAdminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Standard_LRS"
          }
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('brokerNicName'))]"
            }
          ]
        }
      },
    "resources": [
      {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('brokerVmName'),'/rdsdeployment')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', variables('brokerVmName'))]",
        "[concat('Microsoft.Compute/virtualMachines/',variables('gatewayVmName'),'/extensions/gateway')]",
        "rdsh-vm-loop"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.11",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "modulesUrl": "[concat(parameters('_artifactsLocation'),'/DSC/Configuration.zip')]",
          "configurationFunction": "Configuration.ps1\\RDSDeployment",
          "Properties": {
            "adminCreds": {
              "UserName": "[parameters('existingAdminUserName')]",
              "Password": "PrivateSettingsRef:adminPassword"
            },
            "connectionBroker": "[concat(variables('brokerVmName'), '.', parameters('existingDomainName'))]",
            "domainName": "[parameters('existingDomainName')]",
            "externalfqdn": "[reference(variables('gatewayIpRef')).dnsSettings.fqdn]",
            "numberOfRdshInstances": "[parameters('numberOfRdshInstances')]",
            "sessionHostNamingPrefix": "[variables('rdshVmName')]",
            "webAccessServer": "[concat(variables('gatewayVmName'), '.', parameters('existingDomainName'))]"
          }
        },
        "protectedSettings": {
          "Items": {
            "adminPassword": "[parameters('existingAdminPassword')]"
          }
        }
      }
    }
  ]
    }
  ],
  "outputs": {
    "fqdn": {
      "type": "string",
      "value": "[reference(variables('publicIpRef')).dnsSettings.fqdn]"
    },
    "rdWebUrl": {
      "type": "string",
      "value": "[concat('https://', reference(variables('publicIpRef')).dnsSettings.fqdn, '/rdweb')]"
    }
  }
}